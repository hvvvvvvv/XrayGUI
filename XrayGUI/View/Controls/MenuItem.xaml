<MenuItem x:Class="XrayGUI.View.Controls.MenuItem"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             d:Background="AliceBlue"
             xmlns:local="clr-namespace:XrayGUI.View.Controls"
             xmlns:converters="clr-namespace:XrayGUI.View.Converter"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
    <MenuItem.Style>
    <Style TargetType="local:MenuItem" BasedOn="{StaticResource MaterialDesignMenuItem}">
            <Style.Resources>
                <ResourceDictionary>
                    <converters:ValueIsNull x:Key="ValueIsNull"/>
                    <converters:PackIconKindToIconConverter x:Key="PackIconKindToIconConverter"/>
                </ResourceDictionary>
            </Style.Resources>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="Padding" Value="15,0,15,0" />
            <Setter Property="materialDesign:MenuItemAssist.HighlightedBackground" Value="{Binding Foreground , RelativeSource={RelativeSource Self}, Converter={StaticResource BrushOpacityConverter}, ConverterParameter=0.13}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <ControlTemplate.Resources>
                            <Style TargetType="materialDesign:PackIcon">
                                <Setter Property="Height" Value="16" />
                                <Setter Property="Width" Value="16" />
                            </Style>
                        </ControlTemplate.Resources>
                        <Grid ClipToBounds="True">
                            <Border Name="templateRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" />
                            <Border Name="BackgroundRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Visibility="Hidden" Background="{Binding Path=(materialDesign:MenuItemAssist.HighlightedBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                            <materialDesign:Ripple HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Background="Transparent" Focusable="False" Feedback="{TemplateBinding Foreground , Converter={StaticResource BrushRoundConverter}}">
                                <Grid Height="{TemplateBinding Height}" Background="Transparent">
                                    <Grid Margin="{TemplateBinding Padding}" VerticalAlignment="Center" Background="Transparent">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="IconGroup"/>
                                            <ColumnDefinition Width="*" SharedSizeGroup="HeaderGroup" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid Name="IconWrapper" Width="40" Visibility="Visible">
                                            <ContentPresenter Name="Icon" Width="16" Height="16" Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{TemplateBinding Icon}" ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                        <Grid Name="GlyphWrapper" Width="40" Visibility="Collapsed">
                                            <Viewbox Name="GlyphPanel" Width="16" Height="16" Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center" FlowDirection="LeftToRight" Visibility="Collapsed">
                                                <Canvas Width="24" Height="24">
                                                    <Path Name="Glyph" Data="F0 M 21,7 L 9,19 3.5,13.5 4.91,12.09 9,16.17 19.59,5.59 21,7 Z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" />
                                                </Canvas>
                                            </Viewbox>
                                        </Grid>
                                        <Grid Grid.Column="1">
                                            <ContentPresenter Name="BoldHeaderPresenter" VerticalAlignment="Center" Content="{TemplateBinding Header}" ContentSource="Header" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextBlock.FontWeight="Bold" Visibility="Collapsed" />
                                            <ContentPresenter Name="HeaderPresenter" VerticalAlignment="Center" Content="{TemplateBinding Header}" ContentSource="Header" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                        <Grid Name="InputGestureTextWrapper" Grid.Column="2" Visibility="Collapsed">
                                            <TextBlock Margin="16,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Text="{TemplateBinding InputGestureText}" Visibility="{TemplateBinding InputGestureText , Converter={StaticResource StringIsEmptyVisibilityConverter}}" />
                                        </Grid>
                                        <Grid Name="SubBlock" Grid.Column="2" Margin="16,0,0,0" Visibility="Collapsed">
                                            <Path Width="5" Height="10" HorizontalAlignment="Right" VerticalAlignment="Center" Data="F0 M 0,16 L 8,8 0,0 Z" Fill="{TemplateBinding Foreground}" SnapsToDevicePixels="False" Stretch="Uniform" />
                                        </Grid>
                                    </Grid>
                                </Grid>
                            </materialDesign:Ripple>
                            <Popup Name="PART_Popup" AllowsTransparency="True" Focusable="False" Placement="Bottom" PopupAnimation="Slide" CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(materialDesign:ShadowAssist.CacheMode)}" IsOpen="{Binding IsSubmenuOpen , RelativeSource={RelativeSource TemplatedParent}}">
                                <Border Name="SubMenuBorder" Background="{DynamicResource MaterialDesign.Brush.Background}" CornerRadius="2" Effect="{DynamicResource MaterialDesignShadowDepth1}">
                                    <Border Background="{TemplateBinding Background}" CornerRadius="2">
                                        <Border Background="Transparent">
                                            <ScrollViewer Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                                <Grid Margin="0,16" RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas Width="0" Height="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                        <Rectangle Name="OpaqueRect" Fill="Transparent" Width="{Binding ActualWidth , ElementName=SubMenuBorder}" Height="{Binding ActualHeight , ElementName=SubMenuBorder}" />
                                                    </Canvas>
                                                    <ItemsPresenter Name="ItemsPresenter" Grid.IsSharedSizeScope="True" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Border>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="MenuItem.Role" Value="SubmenuHeader">
                                <Setter Property="Height" Value="32" />
                                <Setter TargetName="BoldHeaderPresenter" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="PART_Popup" Property="Placement" Value="Right" />
                                <Setter TargetName="PART_Popup" Property="Popup.VerticalOffset" Value="-16" />
                                <Setter TargetName="SubBlock" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="MenuItem.Role" Value="SubmenuItem">
                                <Setter Property="Height" Value="32" />
                                <Setter TargetName="BoldHeaderPresenter" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="InputGestureTextWrapper" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="MenuItem.Role" Value="TopLevelHeader">
                                <Setter Property="Grid.IsSharedSizeScope" Value="True" />
                                <Setter Value="{Binding Path=(materialDesign:MenuAssist.TopLevelMenuItemHeight), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=MenuBase}}" Property="Height" />
                                <Setter Property="Padding" Value="16,0" />
                                <Setter TargetName="BackgroundRoot" Property="Border.CornerRadius" Value="2" />
                                <Setter TargetName="templateRoot" Property="Border.CornerRadius" Value="2" />
                            </Trigger>
                            <Trigger Property="MenuItem.Role" Value="TopLevelItem">
                                <Setter Value="{Binding Path=(materialDesign:MenuAssist.TopLevelMenuItemHeight), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=MenuBase}}" Property="Height" />
                                <Setter Property="Padding" Value="16,0" />
                                <Setter TargetName="BackgroundRoot" Property="Border.CornerRadius" Value="2" />
                                <Setter TargetName="templateRoot" Property="Border.CornerRadius" Value="2" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="MenuItem.Role" Value="TopLevelHeader" />
                                    <Condition Property="MenuItem.IsSubmenuOpen" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="HeaderPresenter" Property="TextBlock.FontWeight" Value="Bold" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                                <Setter TargetName="SubMenuBorder" Property="Margin" Value="5" />
                            </Trigger>
                            <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
                                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
                            </Trigger>
                            <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                                <Setter TargetName="IconWrapper" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="MenuItem.IsChecked" Value="True">
                                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="MenuItem.IsCheckable" Value="True">
                                <Setter TargetName="GlyphWrapper" Property="Visibility" Value="Visible" />
                                <Setter TargetName="IconWrapper" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="MenuItem.IsHighlighted" Value="True">
                                <Setter TargetName="BackgroundRoot" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="UIElement.Opacity" Value=".56" />
                            </Trigger>
                            <Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                                <Setter TargetName="OpaqueRect" Value="{Binding HorizontalOffset , ElementName=SubMenuScrollViewer}" Property="Canvas.Left" />
                                <Setter TargetName="OpaqueRect" Value="{Binding VerticalOffset , ElementName=SubMenuScrollViewer}" Property="Canvas.Top" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                       
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IconKind, Converter={StaticResource ValueIsNull}}" Value="false">
                    <Setter Property="Icon" Value="{Binding RelativeSource={RelativeSource Self}, Path=IconKind,Converter={StaticResource PackIconKindToIconConverter}}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </MenuItem.Style>
    <MenuItem.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Menu.xaml"/>
            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </MenuItem.Resources>
</MenuItem>
